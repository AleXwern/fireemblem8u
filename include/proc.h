#ifndef GUARD_PROC_H
#define GUARD_PROC_H

struct Proc;

typedef void (*ProcFunc)(struct Proc *);

struct ProcCmd
{
    s16 opcode;
    s16 dataImm;
    void *dataPtr;
};

struct Proc
{
    /*0x00*/ struct ProcCmd *scriptStart;
    /*0x04*/ struct ProcCmd *currCmd;
    /*0x08*/ ProcFunc onDestroy;
    /*0x0C*/ ProcFunc onCycle;
    /*0x10*/ char *name;
    /*0x14*/ struct Proc *parent;  // pointer to parent proc. If this proc is a root proc,
                                   // this member is an integer which is the root index.
    /*0x18*/ struct Proc *child;
    /*0x1C*/ struct Proc *prev;  // previous sibling
    /*0x20*/ struct Proc *next;  // next sibling
    /*0x24*/ s16 sleepTime;
    /*0x26*/ u8 mark;
    /*0x27*/ u8 flags;
    /*0x28*/ u8 blockSemaphore;
    /*0x29*/ u8 filler29[0x6C-0x29];
};

struct UnknownProcStruct
{
    struct Proc *unk0;
    struct ProcCmd *unk4;
    int unk8;
};

void Initialize6CEngine(void);
// ??? New6C(???);
// ??? NewBlocking6C(???);
// ??? Delete6CInternal(???);
// ??? Delete6C(???);
// ??? Allocate6C(???);
// ??? Free6C(???);
// ??? InsertMain6C(???);
// ??? InsertChild6C(???);
// ??? Isolate6C(???);
// ??? Exec6C_(???);
// ??? Exec6C(???);
// ??? Break6CLoop(???);
// ??? Find6C(???);
// ??? sub_8002EC4(???);
// ??? sub_8002EF4(???);
// ??? Goto6CLabel(???);
// ??? Goto6CPointer(???);
// ??? Set6CMark(???);
// ??? Set6CDestructor(???);
// ??? ForAll6C(???);
// ??? ForEach6C(???);
// ??? sub_8002FC0(???);
// ??? BlockEach6CMarked(???);
// ??? UnblockEach6CMarked(???);
// ??? DeleteEach6CMarked(???);
// ??? Delete6C_(???);
// ??? DeleteEach6C(???);
// ??? Clear6CLoopWrapper(???);
// ??? ClearCallbackAll6CMatch(???);
// ??? ForAllFollowing6C(???);
// ??? sub_80030CC(???);
// ??? Call6C_00Delete(???);
// ??? Call6C_01Name(???);
// ??? Call6C_02CallAndContinue(???);
// ??? Call6C_16Call(???);
// ??? Call6C_18CallWithArg(???);
// ??? Call6C_14While(???);
// ??? Call6C_03SetLoop(???);
// ??? Call6C_04SetDestructor(???);
// ??? Call6C_05AddChild(???);
// ??? Call6C_06AddBlockingChild(???);
// ??? Call6C_07AddGlobal_BuggedMaybe(???);
// ??? Call6C_08WhileExists(???);
// ??? Call6C_09DeleteEach6C(???);
// ??? Call6C_0AClearLoopForEach6C(???);
// ??? Call6C_0BOr19Label(???);
// ??? Call6C_0DJump(???);
// ??? Call6C_0CGotoLabel(???);
// ??? _6CSleepLoop(???);
// ??? Call6C_0ESleep(???);
// ??? Call6C_0FMark(???);
// ??? Call6C_13Blank(???);
// ??? Call6C_10Block(???);
// ??? Call6C_11DeleteIfDuplicate(???);
// ??? Call6C_17DeleteOtherDuplicates(???);
// ??? Call6C_15Blank(???);
// ??? Call6C_12SetBit4(???);
// ??? Call6CCode(???);
// ??? nullsub_2(???);
// ??? ForEach6CDoNothing(???);
// ??? sub_8003418(???);
// ??? sub_800344C(???);
// ??? Set6CLoop(???);
// ??? sub_8003454(???);
// ??? sub_8003460(???);
// ??? Find6C_(???);
// ??? sub_80034A0(???);
// ??? sub_80034D4(???);
// ??? sub_80034FC(???);
// ??? sub_8003530(???);
// ??? sub_8003540(???);

#endif  // GUARD_PROC_H
